{
  "endpoints": {
    "/broadcasts": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.broadcasts.listBroadcasts({\n      limit: 5,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  });\n\n  console.log(data);\n})();\n",
      "post": "import { Broadcast, Client, User } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const email: Email = {\t\n    actionUrl: \"action_url\",\n    content: \"content\",\n    title: \"title\"\n  };\n  \n  \n  const inApp: InApp = {\t\n    actionUrl: \"action_url\",\n    content: \"content\",\n    title: \"title\"\n  };\n  \n  \n  const mobilePush: MobilePush = {\t\n    actionUrl: \"action_url\",\n    content: \"content\",\n    title: \"title\"\n  };\n  \n  \n  const sms: Sms = {\t\n    actionUrl: \"action_url\",\n    content: \"content\",\n    title: \"title\"\n  };\n  \n  const overridesChannels: OverridesChannels = {\t\n    email: email,\n    inApp: inApp,\n    mobilePush: mobilePush,\n    sms: sms\n  };\n  \n  \n  const providers: Providers = {\t\n    apns: {},\n    expo: {},\n    fcm: {},\n    mailgun: {},\n    sendgrid: {},\n    ses: {},\n    slack: {},\n    teams: {},\n    twilio: {},\n    webPush: {}\n  };\n  \n  const overrides: Overrides = {\t\n    channels: overridesChannels,\n    providers: providers\n  };\n  \n  \n  const user: User = {\t\n    createdAt: \"created_at\",\n    customAttributes: {},\n    email: \"email\",\n    externalId: \"external_id\",\n    firstName: \"first_name\",\n    id: \"id\",\n    lastName: \"last_name\",\n    lastNotifiedAt: \"last_notified_at\",\n    lastSeenAt: \"last_seen_at\",\n    updatedAt: \"updated_at\"\n  };\n  \n  \n  const errors: Errors = {\t\n    message: \"message\"\n  };\n  \n  const statusStatus = StatusStatus.ENQUEUED;\n  \n  \n  const summary: Summary = {\t\n    failures: 5,\n    total: 10\n  };\n  \n  const broadcastStatus: BroadcastStatus = {\t\n    errors: [errors],\n    status: statusStatus,\n    summary: summary\n  };\n  \n  const broadcast: Broadcast = {\t\n    actionUrl: \"action_url\",\n    category: \"category\",\n    content: \"content\",\n    createdAt: \"created_at\",\n    customAttributes: {},\n    id: \"id\",\n    overrides: overrides,\n    recipients: [user],\n    status: broadcastStatus,\n    title: \"title\",\n    topic: \"topic\"\n  };\n\n  const { data } = await client.broadcasts.createBroadcast(broadcast);\n\n  console.log(data);\n})();\n"
    },
    "/broadcasts/{broadcast_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.broadcasts.fetchBroadcast(\"broadcast_id\");\n\n  console.log(data);\n})();\n"
    },
    "/channels": {
      "put": "import { CategoryDeliveryConfig, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const channel = Channel.IN_APP;\n  \n  const categoryDeliveryConfigChannels: CategoryDeliveryConfigChannels = {\t\n    channel: channel,\n    delay: 8,\n    if: \"if\"\n  };\n  \n  const categoryDeliveryConfig: CategoryDeliveryConfig = {\t\n    channels: [categoryDeliveryConfigChannels],\n    disabled: true,\n    key: \"key\"\n  };\n\n  const { data } = await client.channels.saveChannelsConfig(categoryDeliveryConfig);\n\n  console.log(data);\n})();\n"
    },
    "/channels/{key}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchChannelsConfig(\"key\");\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserInboxTokens(\n  \"user_id\",\n  {\n      limit: 5,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserInboxToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserInboxToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserApnsTokens(\n  \"user_id\",\n  {\n      limit: 10,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserApnsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserApnsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserExpoTokens(\n  \"user_id\",\n  {\n      limit: 10,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserExpoToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserExpoToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserFcmTokens(\n  \"user_id\",\n  {\n      limit: 8,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserFcmToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserFcmToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserSlackTokens(\n  \"user_id\",\n  {\n      limit: 1,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserSlackToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserSlackToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserTeamsTokens(\n  \"user_id\",\n  {\n      limit: 2,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserTeamsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserTeamsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.listUserWebPushTokens(\n  \"user_id\",\n  {\n      limit: 8,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.fetchUserWebPushToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.channels.deleteUserWebPushToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/events": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.events.listEvents({\n      limit: 10,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/events/{event_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.events.fetchEvent(\"event_id\");\n\n  console.log(data);\n})();\n"
    },
    "/integrations": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listIntegrations({\n      limit: 1,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/apns": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listApnsIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { ApnsConfigPayload, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const badge = Badge.UNREAD;\n  \n  const payloadVersion = PayloadVersion._1;\n  \n  const apnsConfigPayload: ApnsConfigPayload = {\t\n    appId: \"app_id\",\n    badge: badge,\n    certificate: \"BEGIN PRIVATE KEY--------\n  hAfVaNwLMD==\n  -----END PRIVATE KEY-----------\",\n    keyId: \"ex dolore \",\n    payloadVersion: payloadVersion,\n    teamId: \"nostrudqui\"\n  };\n\n  const { data } = await client.integrations.saveApnsIntegration(apnsConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteApnsIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/expo": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listExpoIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, ExpoConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const expoConfigPayload: ExpoConfigPayload = {\t\n    accessToken: \"access_token\"\n  };\n\n  const { data } = await client.integrations.saveExpoIntegration(expoConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteExpoIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/fcm": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listFcmIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, FcmConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const type_ = Type_.SERVICE_ACCOUNT;\n  \n  const fcmConfigPayload: FcmConfigPayload = {\t\n    authProviderX509CertUrl: \"auth_provider_x509_cert_url\",\n    authUri: \"auth_uri\",\n    clientEmail: \"client_email\",\n    clientId: \"client_id\",\n    clientX509CertUrl: \"client_x509_cert_url\",\n    privateKey: \"BEGINOYAOGTL---------\n  Z3XYlIQ\n  -------- ENDGDWPSV--------\",\n    privateKeyId: \"private_key_id\",\n    projectId: \"project_id\",\n    tokenUri: \"token_uri\",\n    type: type_,\n    universeDomain: \"universe_domain\"\n  };\n\n  const { data } = await client.integrations.saveFcmIntegration(fcmConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteFcmIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/github": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listGithubIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, GithubConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const githubConfigPayload: GithubConfigPayload = {\t\n    webhookSigningSecret: \"webhook_signing_secret\"\n  };\n\n  const { data } = await client.integrations.saveGithubIntegration(githubConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteGithubIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/inbox": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listInboxIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, InboxConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const images: Images = {\t\n    emptyInboxUrl: \"emptyInboxUrl\"\n  };\n  \n  \n  const banner: Banner = {\t\n    backgroundColor: \"backgroundColor\",\n    backgroundOpacity: 2.69,\n    fontSize: \"fontSize\",\n    textColor: \"textColor\"\n  };\n  \n  \n  const dialog: Dialog = {\t\n    accentColor: \"accentColor\",\n    backgroundColor: \"backgroundColor\",\n    textColor: \"textColor\"\n  };\n  \n  \n  const footer: Footer = {\t\n    backgroundColor: \"backgroundColor\",\n    borderRadius: \"borderRadius\",\n    fontSize: \"fontSize\",\n    textColor: \"textColor\"\n  };\n  \n  \n  const header: Header = {\t\n    backgroundColor: \"backgroundColor\",\n    borderRadius: \"borderRadius\",\n    fontFamily: \"fontFamily\",\n    fontSize: \"fontSize\",\n    textColor: \"textColor\"\n  };\n  \n  \n  const icon: Icon = {\t\n    borderColor: \"borderColor\",\n    width: \"width\"\n  };\n  \n  \n  const defaultHover: DefaultHover = {\t\n    backgroundColor: \"backgroundColor\"\n  };\n  \n  \n  const defaultState: DefaultState = {\t\n    color: \"color\"\n  };\n  \n  const default_: Default_ = {\t\n    backgroundColor: \"backgroundColor\",\n    borderRadius: \"borderRadius\",\n    fontFamily: \"fontFamily\",\n    fontSize: \"fontSize\",\n    hover: defaultHover,\n    margin: \"margin\",\n    state: defaultState,\n    textColor: \"textColor\"\n  };\n  \n  \n  const unreadHover: UnreadHover = {\t\n    backgroundColor: \"backgroundColor\"\n  };\n  \n  \n  const unreadState: UnreadState = {\t\n    color: \"color\"\n  };\n  \n  const unread: Unread = {\t\n    backgroundColor: \"backgroundColor\",\n    hover: unreadHover,\n    state: unreadState,\n    textColor: \"textColor\"\n  };\n  \n  \n  const unseenHover: UnseenHover = {\t\n    backgroundColor: \"backgroundColor\"\n  };\n  \n  \n  const unseenState: UnseenState = {\t\n    color: \"color\"\n  };\n  \n  const unseen: Unseen = {\t\n    backgroundColor: \"backgroundColor\",\n    hover: unseenHover,\n    state: unseenState,\n    textColor: \"textColor\"\n  };\n  \n  const notification: Notification = {\t\n    default: default_,\n    unread: unread,\n    unseen: unseen\n  };\n  \n  \n  const unseenBadge: UnseenBadge = {\t\n    backgroundColor: \"backgroundColor\"\n  };\n  \n  const theme: Theme = {\t\n    banner: banner,\n    dialog: dialog,\n    footer: footer,\n    header: header,\n    icon: icon,\n    notification: notification,\n    unseenBadge: unseenBadge\n  };\n  \n  const inboxConfigPayload: InboxConfigPayload = {\t\n    images: images,\n    locale: \"locale\",\n    theme: theme\n  };\n\n  const { data } = await client.integrations.saveInboxIntegration(inboxConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteInboxIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/mailgun": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listMailgunIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, MailgunConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const mailgunConfigPayloadFrom: MailgunConfigPayloadFrom = {\t\n    email: \"email\",\n    name: \"name\"\n  };\n  \n  const region = Region.US;\n  \n  const mailgunConfigPayload: MailgunConfigPayload = {\t\n    apiKey: \"api_key\",\n    domain: \"domain\",\n    from: mailgunConfigPayloadFrom,\n    region: region\n  };\n\n  const { data } = await client.integrations.saveMailgunIntegration(mailgunConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteMailgunIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ping_email": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listPingEmailIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, PingConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const pingConfigPayload: PingConfigPayload = {\t\n    url: \"url\"\n  };\n\n  const { data } = await client.integrations.savePingEmailIntegration(pingConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deletePingEmailIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/sendgrid": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listSendgridIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SendgridConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const sendgridConfigPayloadFrom: SendgridConfigPayloadFrom = {\t\n    email: \"email\",\n    name: \"name\"\n  };\n  \n  \n  const replyTo: ReplyTo = {\t\n    email: \"email\",\n    name: \"name\"\n  };\n  \n  const sendgridConfigPayload: SendgridConfigPayload = {\t\n    apiKey: \"api_key\",\n    from: sendgridConfigPayloadFrom,\n    replyTo: replyTo\n  };\n\n  const { data } = await client.integrations.saveSendgridIntegration(sendgridConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteSendgridIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ses": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listSesIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SesConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const sesConfigPayloadFrom: SesConfigPayloadFrom = {\t\n    email: \"email\",\n    name: \"name\"\n  };\n  \n  const sesConfigPayload: SesConfigPayload = {\t\n    from: sesConfigPayloadFrom,\n    keyId: \"key_id\",\n    region: \"region\",\n    secretKey: \"secret_key\"\n  };\n\n  const { data } = await client.integrations.saveSesIntegration(sesConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteSesIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/slack": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listSlackIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SlackConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const slackConfigPayload: SlackConfigPayload = {\t\n    appId: \"OAZKV\",\n    clientId: \"10505693160.5484621\",\n    clientSecret: \"consectetur voluptate exercitati\",\n    signingSecret: \"consequat excupidatat velit dolo\"\n  };\n\n  const { data } = await client.integrations.saveSlackIntegration(slackConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteSlackIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/stripe": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listStripeIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, StripeConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const stripeConfigPayload: StripeConfigPayload = {\t\n    webhookSigningSecret: \"webhook_signing_secret\"\n  };\n\n  const { data } = await client.integrations.saveStripeIntegration(stripeConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteStripeIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/twilio": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listTwilioIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, TwilioConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const twilioConfigPayload: TwilioConfigPayload = {\t\n    accountSid: \"account_sid\",\n    apiKey: \"api_key\",\n    apiSecret: \"api_secret\",\n    from: \"+9863\"\n  };\n\n  const { data } = await client.integrations.saveTwilioIntegration(twilioConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteTwilioIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/integrations/web_push": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.listWebPushIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, WebpushConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const webpushConfigPayload: WebpushConfigPayload = {\t\n    privateKey: \"private_key\",\n    publicKey: \"public_key\"\n  };\n\n  const { data } = await client.integrations.saveWebPushIntegration(webpushConfigPayload);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.integrations.deleteWebPushIntegration({\n      id: \"id\",\n  });\n\n  console.log(data);\n})();\n"
    },
    "/users": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.users.listUsers({\n      limit: 6,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n      query: \"query\",\n  });\n\n  console.log(data);\n})();\n",
      "put": "import { Client, User } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  \n  const user: User = {\t\n    createdAt: \"created_at\",\n    customAttributes: {},\n    email: \"email\",\n    externalId: \"external_id\",\n    firstName: \"first_name\",\n    id: \"id\",\n    lastName: \"last_name\",\n    lastNotifiedAt: \"last_notified_at\",\n    lastSeenAt: \"last_seen_at\",\n    updatedAt: \"updated_at\"\n  };\n\n  const { data } = await client.users.saveUser(user);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.users.deleteUser(\"user_id\");\n\n  console.log(data);\n})();\n"
    }
  },
  "example": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN',\n});\n\n  const { data } = await client.broadcasts.listBroadcasts({\n      limit: 5,\n      startingAfter: \"starting_after\",\n      endingBefore: \"ending_before\",\n  });\n\n  console.log(data);\n})();\n",
  "authentication": {
    "bearer": {
      "constructor": "const sdk = new Client({ token: 'YOUR_TOKEN' });",
      "setter": "const sdk = new Client();\nsdk.token = 'YOUR_TOKEN';"
    }
  }
}
