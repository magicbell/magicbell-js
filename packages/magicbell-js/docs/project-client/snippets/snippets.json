{
  "endpoints": {
    "/broadcasts": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.listBroadcasts(\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "post": "import { Broadcast, Client, User } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst email: Email = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst inApp: InApp = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst mobilePush: MobilePush = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst sms: Sms = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\nconst overridesChannels: OverridesChannels = {\t\n  email: email,\n  inApp: inApp,\n  mobilePush: mobilePush,\n  sms: sms\n};\n\n\nconst providers: Providers = {\t\n  apns: {},\n  expo: {},\n  fcm: {},\n  mailgun: {},\n  sendgrid: {},\n  ses: {},\n  slack: {},\n  teams: {},\n  twilio: {},\n  webPush: {}\n};\n\nconst overrides: Overrides = {\t\n  channels: overridesChannels,\n  providers: providers\n};\n\n\nconst user: User = {\t\n  createdAt: \"created_at\",\n  customAttributes: {},\n  email: \"email\",\n  externalId: \"external_id\",\n  firstName: \"first_name\",\n  id: \"id\",\n  lastName: \"last_name\",\n  lastNotifiedAt: \"last_notified_at\",\n  lastSeenAt: \"last_seen_at\",\n  updatedAt: \"updated_at\"\n};\n\n\nconst errors: Errors = {\t\n  message: \"message\"\n};\n\nconst statusStatus = StatusStatus.ENQUEUED;\n\n\nconst summary: Summary = {\t\n  failures: 3,\n  total: 4\n};\n\nconst broadcastStatus: BroadcastStatus = {\t\n  errors: [errors],\n  status: statusStatus,\n  summary: summary\n};\n\nconst broadcast: Broadcast = {\t\n  actionUrl: \"action_url\",\n  category: \"category\",\n  content: \"content\",\n  createdAt: \"created_at\",\n  customAttributes: {},\n  id: \"id\",\n  overrides: overrides,\n  recipients: [user],\n  status: broadcastStatus,\n  title: \"title\",\n  topic: \"topic\"\n};\n\n  const { data } = await client.broadcasts.createBroadcast(\n  broadcast\n);\n\n  console.log(data);\n})();\n"
    },
    "/broadcasts/{broadcast_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.fetchBroadcast(\n  \"broadcast_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/channels": {
      "put": "import { CategoryDeliveryConfig, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const channel = Channel.IN_APP;\n\nconst categoryDeliveryConfigChannels: CategoryDeliveryConfigChannels = {\t\n  channel: channel,\n  delay: 1,\n  if: \"if\"\n};\n\nconst categoryDeliveryConfig: CategoryDeliveryConfig = {\t\n  channels: [categoryDeliveryConfigChannels],\n  disabled: true,\n  key: \"key\"\n};\n\n  const { data } = await client.channels.saveChannelsConfig(\n  categoryDeliveryConfig\n);\n\n  console.log(data);\n})();\n"
    },
    "/channels/{key}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchChannelsConfig(\n  \"key\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserInboxTokens(\n  \"user_id\",\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserInboxToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserInboxToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserApnsTokens(\n  \"user_id\",\n  {\n    limit: 8,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserApnsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserApnsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserExpoTokens(\n  \"user_id\",\n  {\n    limit: 2,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserExpoToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserExpoToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserFcmTokens(\n  \"user_id\",\n  {\n    limit: 9,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserFcmToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserFcmToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserSlackTokens(\n  \"user_id\",\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserSlackToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserSlackToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserTeamsTokens(\n  \"user_id\",\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserTeamsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserTeamsToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.listUserWebPushTokens(\n  \"user_id\",\n  {\n    limit: 6,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.fetchUserWebPushToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.deleteUserWebPushToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/events": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.events.listEvents(\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/events/{event_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.events.fetchEvent(\n  \"event_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listIntegrations(\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/apns": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listApnsIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { ApnsConfigPayload, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const badge = Badge.UNREAD;\n\nconst payloadVersion = PayloadVersion._1;\n\nconst apnsConfigPayload: ApnsConfigPayload = {\t\n  appId: \"app_id\",\n  badge: badge,\n  certificate: \"BEGIN PRIVATE KEY---\n/5\n------- END PRIVATE KEYYYY-----\n\",\n  keyId: \"et reprehe\",\n  payloadVersion: payloadVersion,\n  teamId: \"do pariatu\"\n};\n\n  const { data } = await client.integrations.saveApnsIntegration(\n  apnsConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteApnsIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/expo": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listExpoIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, ExpoConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst expoConfigPayload: ExpoConfigPayload = {\t\n  accessToken: \"access_token\"\n};\n\n  const { data } = await client.integrations.saveExpoIntegration(\n  expoConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteExpoIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/fcm": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listFcmIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, FcmConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const type_ = Type_.SERVICE_ACCOUNT;\n\nconst fcmConfigPayload: FcmConfigPayload = {\t\n  authProviderX509CertUrl: \"auth_provider_x509_cert_url\",\n  authUri: \"auth_uri\",\n  clientEmail: \"client_email\",\n  clientId: \"client_id\",\n  clientX509CertUrl: \"client_x509_cert_url\",\n  privateKey: \"---------- BEGINBLZFVIIV-----------\nBrvpB2GEoNB=\n--- ENDIQVIQTLC---\",\n  privateKeyId: \"private_key_id\",\n  projectId: \"project_id\",\n  tokenUri: \"token_uri\",\n  type: type_,\n  universeDomain: \"universe_domain\"\n};\n\n  const { data } = await client.integrations.saveFcmIntegration(\n  fcmConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteFcmIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/inbox": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listInboxIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, InboxConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst images: Images = {\t\n  emptyInboxUrl: \"emptyInboxUrl\"\n};\n\n\nconst banner: Banner = {\t\n  backgroundColor: \"backgroundColor\",\n  backgroundOpacity: 8.02,\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst dialog: Dialog = {\t\n  accentColor: \"accentColor\",\n  backgroundColor: \"backgroundColor\",\n  textColor: \"textColor\"\n};\n\n\nconst footer: Footer = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst header: Header = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontFamily: \"fontFamily\",\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst icon: Icon = {\t\n  borderColor: \"borderColor\",\n  width: \"width\"\n};\n\n\nconst defaultHover: DefaultHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst defaultState: DefaultState = {\t\n  color: \"color\"\n};\n\nconst default_: Default_ = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontFamily: \"fontFamily\",\n  fontSize: \"fontSize\",\n  hover: defaultHover,\n  margin: \"margin\",\n  state: defaultState,\n  textColor: \"textColor\"\n};\n\n\nconst unreadHover: UnreadHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst unreadState: UnreadState = {\t\n  color: \"color\"\n};\n\nconst unread: Unread = {\t\n  backgroundColor: \"backgroundColor\",\n  hover: unreadHover,\n  state: unreadState,\n  textColor: \"textColor\"\n};\n\n\nconst unseenHover: UnseenHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst unseenState: UnseenState = {\t\n  color: \"color\"\n};\n\nconst unseen: Unseen = {\t\n  backgroundColor: \"backgroundColor\",\n  hover: unseenHover,\n  state: unseenState,\n  textColor: \"textColor\"\n};\n\nconst notification: Notification = {\t\n  default: default_,\n  unread: unread,\n  unseen: unseen\n};\n\n\nconst unseenBadge: UnseenBadge = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\nconst theme: Theme = {\t\n  banner: banner,\n  dialog: dialog,\n  footer: footer,\n  header: header,\n  icon: icon,\n  notification: notification,\n  unseenBadge: unseenBadge\n};\n\nconst inboxConfigPayload: InboxConfigPayload = {\t\n  images: images,\n  locale: \"locale\",\n  theme: theme\n};\n\n  const { data } = await client.integrations.saveInboxIntegration(\n  inboxConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteInboxIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/mailgun": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listMailgunIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, MailgunConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst mailgunConfigPayloadFrom: MailgunConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst region = Region.US;\n\nconst mailgunConfigPayload: MailgunConfigPayload = {\t\n  apiKey: \"api_key\",\n  domain: \"domain\",\n  from: mailgunConfigPayloadFrom,\n  region: region\n};\n\n  const { data } = await client.integrations.saveMailgunIntegration(\n  mailgunConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteMailgunIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ping_email": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listPingEmailIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, PingConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst pingConfigPayload: PingConfigPayload = {\t\n  url: \"url\"\n};\n\n  const { data } = await client.integrations.savePingEmailIntegration(\n  pingConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deletePingEmailIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/sendgrid": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listSendgridIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SendgridConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst sendgridConfigPayloadFrom: SendgridConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\n\nconst replyTo: ReplyTo = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst sendgridConfigPayload: SendgridConfigPayload = {\t\n  apiKey: \"api_key\",\n  from: sendgridConfigPayloadFrom,\n  replyTo: replyTo\n};\n\n  const { data } = await client.integrations.saveSendgridIntegration(\n  sendgridConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSendgridIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ses": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listSesIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SesConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst sesConfigPayloadFrom: SesConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst sesConfigPayload: SesConfigPayload = {\t\n  from: sesConfigPayloadFrom,\n  keyId: \"key_id\",\n  region: \"region\",\n  secretKey: \"secret_key\"\n};\n\n  const { data } = await client.integrations.saveSesIntegration(\n  sesConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSesIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/slack": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listSlackIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SlackConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst slackConfigPayload: SlackConfigPayload = {\t\n  appId: \"VDHAC\",\n  clientId: \"27521046.35070406\",\n  clientSecret: \"in laboris ullamco nulla aliquip\",\n  signingSecret: \"esse exercitation etdolore aute \"\n};\n\n  const { data } = await client.integrations.saveSlackIntegration(\n  slackConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSlackIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/twilio": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listTwilioIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, TwilioConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst twilioConfigPayload: TwilioConfigPayload = {\t\n  accountSid: \"account_sid\",\n  apiKey: \"api_key\",\n  apiSecret: \"api_secret\",\n  from: \"+43543\"\n};\n\n  const { data } = await client.integrations.saveTwilioIntegration(\n  twilioConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteTwilioIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/web_push": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listWebPushIntegrations();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, WebpushConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst webpushConfigPayload: WebpushConfigPayload = {\t\n  privateKey: \"private_key\",\n  publicKey: \"public_key\"\n};\n\n  const { data } = await client.integrations.saveWebPushIntegration(\n  webpushConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteWebPushIntegration(\n  {\n    id: \"id\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.users.listUsers(\n  {\n    limit: 7,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n    query: \"query\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "put": "import { Client, User } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst user: User = {\t\n  createdAt: \"created_at\",\n  customAttributes: {},\n  email: \"email\",\n  externalId: \"external_id\",\n  firstName: \"first_name\",\n  id: \"id\",\n  lastName: \"last_name\",\n  lastNotifiedAt: \"last_notified_at\",\n  lastSeenAt: \"last_seen_at\",\n  updatedAt: \"updated_at\"\n};\n\n  const { data } = await client.users.saveUser(\n  user\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.users.deleteUser(\n  \"user_id\"\n);\n\n  console.log(data);\n})();\n"
    }
  },
  "example": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.listBroadcasts(\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n",
  "authentication": {
    "bearer": {
      "constructor": "const sdk = new Client({ token: 'YOUR_TOKEN' });",
      "setter": "const sdk = new Client();\nsdk.token = 'YOUR_TOKEN';"
    }
  }
}
