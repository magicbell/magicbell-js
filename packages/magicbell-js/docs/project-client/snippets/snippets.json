{
  "endpoints": {
    "/broadcasts": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.listBroadcasts(\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "post": "import { Broadcast, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst email: Email = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst inApp: InApp = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst mobilePush: MobilePush = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst slack: Slack = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst sms: Sms = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\n\nconst webPush: WebPush = {\t\n  actionUrl: \"action_url\",\n  content: \"content\",\n  title: \"title\"\n};\n\nconst overridesChannels: OverridesChannels = {\t\n  email: email,\n  inApp: inApp,\n  mobilePush: mobilePush,\n  slack: slack,\n  sms: sms,\n  webPush: webPush\n};\n\n\nconst providers: Providers = {\t\n  amazonSes: {},\n  android: {},\n  ios: {},\n  mailgun: {},\n  postmark: {},\n  sendgrid: {},\n  slack: {}\n};\n\nconst overrides: Overrides = {\t\n  channels: overridesChannels,\n  providers: providers\n};\n\n\nconst errors: Errors = {\t\n  message: \"message\"\n};\n\nconst statusStatus = StatusStatus.ENQUEUED;\n\n\nconst summary: Summary = {\t\n  failures: 123,\n  total: 8\n};\n\nconst broadcastStatus: BroadcastStatus = {\t\n  errors: [errors],\n  status: statusStatus,\n  summary: summary\n};\n\nconst broadcast: Broadcast = {\t\n  actionUrl: \"action_url\",\n  category: \"category\",\n  content: \"content\",\n  createdAt: \"created_at\",\n  customAttributes: {},\n  id: \"id\",\n  overrides: overrides,\n  recipients: [{}],\n  status: broadcastStatus,\n  title: \"title\",\n  topic: \"topic\"\n};\n\n  const { data } = await client.broadcasts.createBroadcast(\n  broadcast\n);\n\n  console.log(data);\n})();\n"
    },
    "/broadcasts/{broadcast_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.fetchBroadcast(\n  \"broadcast_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/channels/deliveryconfig": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getDeliveryconfig(\n  {\n    key: \"key\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "put": "import { CategoryDeliveryConfig, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const channel = Channel.IN_APP;\n\nconst categoryDeliveryConfigChannels: CategoryDeliveryConfigChannels = {\t\n  channel: channel,\n  delay: 8,\n  if: \"if\"\n};\n\nconst categoryDeliveryConfig: CategoryDeliveryConfig = {\t\n  channels: [categoryDeliveryConfigChannels],\n  disabled: true,\n  key: \"key\"\n};\n\n  const { data } = await client.channels.saveDeliveryconfig(\n  categoryDeliveryConfig\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getInAppInboxUserTokens(\n  \"user_id\",\n  {\n    limit: 3,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/in_app/inbox/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getInAppInboxUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardInAppInboxUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushApnsUserTokens(\n  \"user_id\",\n  {\n    limit: 8,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/apns/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushApnsUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardMobilePushApnsUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushExpoUserTokens(\n  \"user_id\",\n  {\n    limit: 2,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/expo/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushExpoUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardMobilePushExpoUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushFcmUserTokens(\n  \"user_id\",\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/mobile_push/fcm/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getMobilePushFcmUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardMobilePushFcmUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getSlackUserTokens(\n  \"user_id\",\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/slack/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getSlackUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardSlackUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getTeamsUserTokens(\n  \"user_id\",\n  {\n    limit: 4,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/teams/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getTeamsUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardTeamsUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getWebPushUserTokens(\n  \"user_id\",\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}/channels/web_push/tokens/{token_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.getWebPushUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.channels.discardWebPushUserToken(\n  \"user_id\",\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/events": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.events.listEvents(\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/events/{id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.events.getEvent(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.listIntegrations(\n  {\n    limit: 3,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/apns": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getApnsIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { ApnsConfigPayload, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const badge = Badge.UNREAD;\n\nconst payloadVersion = PayloadVersion._1;\n\nconst apnsConfigPayload: ApnsConfigPayload = {\t\n  appId: \"app_id\",\n  badge: badge,\n  certificate: \"BEGIN PRIVATE KEY----\n7tahhm84==\n----------- END PRIVATE KEYYYYYYY----------\",\n  keyId: \"exercitati\",\n  payloadVersion: payloadVersion,\n  teamId: \"reprehende\"\n};\n\n  const { data } = await client.integrations.saveApnsIntegration(\n  apnsConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteApnsIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/apns/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteApnsIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/awssns": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getAwssnsIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { AwssnsConfigPayload, Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst awssnsConfigPayload: AwssnsConfigPayload = {\t\n  webhookSigningSecret: \"webhook_signing_secret\"\n};\n\n  const { data } = await client.integrations.saveAwssnsIntegration(\n  awssnsConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteAwssnsIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/awssns/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteAwssnsIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/eventsource": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getEventsourceIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, EventSourceConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst eventSourceConfigPayload: EventSourceConfigPayload = {\t\n  source: \"source\"\n};\n\n  const { data } = await client.integrations.saveEventsourceIntegration(\n  eventSourceConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteEventsourceIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/eventsource/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteEventsourceIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/expo": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getExpoIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, ExpoConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst expoConfigPayload: ExpoConfigPayload = {\t\n  accessToken: \"access_token\"\n};\n\n  const { data } = await client.integrations.saveExpoIntegration(\n  expoConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteExpoIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/expo/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteExpoIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/fcm": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getFcmIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, FcmConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const type_ = Type_.SERVICE_ACCOUNT;\n\nconst fcmConfigPayload: FcmConfigPayload = {\t\n  authProviderX509CertUrl: \"auth_provider_x509_cert_url\",\n  authUri: \"auth_uri\",\n  clientEmail: \"client_email\",\n  clientId: \"client_id\",\n  clientX509CertUrl: \"client_x509_cert_url\",\n  privateKey: \"----------BEGINOQ-------\nOqZWZ=\n-- ENDNCDMDD--------\n\",\n  privateKeyId: \"private_key_id\",\n  projectId: \"project_id\",\n  tokenUri: \"token_uri\",\n  type: type_,\n  universeDomain: \"universe_domain\"\n};\n\n  const { data } = await client.integrations.saveFcmIntegration(\n  fcmConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteFcmIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/fcm/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteFcmIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/github": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getGithubIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, GithubConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst githubConfigPayload: GithubConfigPayload = {\t\n  webhookSigningSecret: \"webhook_signing_secret\"\n};\n\n  const { data } = await client.integrations.saveGithubIntegration(\n  githubConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteGithubIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/github/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteGithubIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/inbox": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getInboxIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, InboxConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst images: Images = {\t\n  emptyInboxUrl: \"emptyInboxUrl\"\n};\n\n\nconst banner: Banner = {\t\n  backgroundColor: \"backgroundColor\",\n  backgroundOpacity: 3.3,\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst dialog: Dialog = {\t\n  accentColor: \"accentColor\",\n  backgroundColor: \"backgroundColor\",\n  textColor: \"textColor\"\n};\n\n\nconst footer: Footer = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst header: Header = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontFamily: \"fontFamily\",\n  fontSize: \"fontSize\",\n  textColor: \"textColor\"\n};\n\n\nconst icon: Icon = {\t\n  borderColor: \"borderColor\",\n  width: \"width\"\n};\n\n\nconst defaultHover: DefaultHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst defaultState: DefaultState = {\t\n  color: \"color\"\n};\n\nconst default_: Default_ = {\t\n  backgroundColor: \"backgroundColor\",\n  borderRadius: \"borderRadius\",\n  fontFamily: \"fontFamily\",\n  fontSize: \"fontSize\",\n  hover: defaultHover,\n  margin: \"margin\",\n  state: defaultState,\n  textColor: \"textColor\"\n};\n\n\nconst unreadHover: UnreadHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst unreadState: UnreadState = {\t\n  color: \"color\"\n};\n\nconst unread: Unread = {\t\n  backgroundColor: \"backgroundColor\",\n  hover: unreadHover,\n  state: unreadState,\n  textColor: \"textColor\"\n};\n\n\nconst unseenHover: UnseenHover = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\n\nconst unseenState: UnseenState = {\t\n  color: \"color\"\n};\n\nconst unseen: Unseen = {\t\n  backgroundColor: \"backgroundColor\",\n  hover: unseenHover,\n  state: unseenState,\n  textColor: \"textColor\"\n};\n\nconst notification: Notification = {\t\n  default: default_,\n  unread: unread,\n  unseen: unseen\n};\n\n\nconst unseenBadge: UnseenBadge = {\t\n  backgroundColor: \"backgroundColor\"\n};\n\nconst theme: Theme = {\t\n  banner: banner,\n  dialog: dialog,\n  footer: footer,\n  header: header,\n  icon: icon,\n  notification: notification,\n  unseenBadge: unseenBadge\n};\n\nconst inboxConfigPayload: InboxConfigPayload = {\t\n  images: images,\n  locale: \"locale\",\n  theme: theme\n};\n\n  const { data } = await client.integrations.saveInboxIntegration(\n  inboxConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteInboxIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/inbox/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteInboxIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/mailgun": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getMailgunIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, MailgunConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst mailgunConfigPayloadFrom: MailgunConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst region = Region.US;\n\nconst mailgunConfigPayload: MailgunConfigPayload = {\t\n  apiKey: \"api_key\",\n  domain: \"domain\",\n  from: mailgunConfigPayloadFrom,\n  region: region\n};\n\n  const { data } = await client.integrations.saveMailgunIntegration(\n  mailgunConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteMailgunIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/mailgun/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteMailgunIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ping_email": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getPingEmailIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, PingConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst pingConfigPayload: PingConfigPayload = {\t\n  url: \"url\"\n};\n\n  const { data } = await client.integrations.savePingEmailIntegration(\n  pingConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deletePingEmailIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ping_email/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deletePingEmailIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/sendgrid": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getSendgridIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SendgridConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst sendgridConfigPayloadFrom: SendgridConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\n\nconst replyTo: ReplyTo = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst sendgridConfigPayload: SendgridConfigPayload = {\t\n  apiKey: \"api_key\",\n  from: sendgridConfigPayloadFrom,\n  replyTo: replyTo\n};\n\n  const { data } = await client.integrations.saveSendgridIntegration(\n  sendgridConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSendgridIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/sendgrid/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSendgridIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ses": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getSesIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SesConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst sesConfigPayloadFrom: SesConfigPayloadFrom = {\t\n  email: \"email\",\n  name: \"name\"\n};\n\nconst sesConfigPayload: SesConfigPayload = {\t\n  from: sesConfigPayloadFrom,\n  keyId: \"key_id\",\n  region: \"region\",\n  secretKey: \"secret_key\"\n};\n\n  const { data } = await client.integrations.saveSesIntegration(\n  sesConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSesIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/ses/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSesIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/slack": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getSlackIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, SlackConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst slackConfigPayload: SlackConfigPayload = {\t\n  appId: \"PDF3SO6JI9\",\n  clientId: \"091109.871\",\n  clientSecret: \"ad aute doaliquip aliqua dolor n\",\n  signingSecret: \"dolor eiusmodofficia nulla eain \"\n};\n\n  const { data } = await client.integrations.saveSlackIntegration(\n  slackConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSlackIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/slack/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteSlackIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/stripe": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getStripeIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, StripeConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst stripeConfigPayload: StripeConfigPayload = {\t\n  webhookSigningSecret: \"webhook_signing_secret\"\n};\n\n  const { data } = await client.integrations.saveStripeIntegration(\n  stripeConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteStripeIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/stripe/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteStripeIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/templates": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getTemplatesIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const input = {};\n\n  const { data } = await client.integrations.saveTemplatesIntegration();\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteTemplatesIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/templates/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteTemplatesIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/twilio": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getTwilioIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, TwilioConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst twilioConfigPayload: TwilioConfigPayload = {\t\n  accountSid: \"account_sid\",\n  apiKey: \"api_key\",\n  apiSecret: \"api_secret\",\n  from: \"+830067292871\"\n};\n\n  const { data } = await client.integrations.saveTwilioIntegration(\n  twilioConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteTwilioIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/twilio/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteTwilioIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/integrations/web_push": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.getWebPushIntegration();\n\n  console.log(data);\n})();\n",
      "put": "import { Client, WebpushConfigPayload } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst webpushConfigPayload: WebpushConfigPayload = {\t\n  privateKey: \"private_key\",\n  publicKey: \"public_key\"\n};\n\n  const { data } = await client.integrations.saveWebPushIntegration(\n  webpushConfigPayload\n);\n\n  console.log(data);\n})();\n",
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteWebPushIntegration();\n\n  console.log(data);\n})();\n"
    },
    "/integrations/web_push/{id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.integrations.deleteWebPushIntegrationById(\n  \"id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/jwt/project": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.jwt.fetchProjectTokens(\n  {\n    limit: 3,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "post": "import { Client, CreateProjectTokenRequest } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst createProjectTokenRequest: CreateProjectTokenRequest = {\t\n  expiry: 5,\n  name: \"name\"\n};\n\n  const { data } = await client.jwt.createProjectJwt(\n  createProjectTokenRequest\n);\n\n  console.log(data);\n})();\n"
    },
    "/jwt/project/{token_id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.jwt.discardProjectJwt(\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/jwt/user": {
      "post": "import { Client, CreateUserTokenRequest } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst createUserTokenRequest: CreateUserTokenRequest = {\t\n  email: \"email\",\n  expiry: 4,\n  externalId: \"external_id\",\n  name: \"name\"\n};\n\n  const { data } = await client.jwt.createUserJwt(\n  createUserTokenRequest\n);\n\n  console.log(data);\n})();\n"
    },
    "/jwt/user/{token_id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.jwt.discardUserJwt(\n  \"token_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/jwt/user/{user_id}": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.jwt.fetchUserTokens(\n  \"user_id\",\n  {\n    limit: 10,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n"
    },
    "/notifications/{notification_id}/deliveryplan": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.notifications.getDeliveryplan(\n  \"notification_id\"\n);\n\n  console.log(data);\n})();\n"
    },
    "/users": {
      "get": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.users.listUsers(\n  {\n    limit: 1,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n    query: \"query\",\n  }\n);\n\n  console.log(data);\n})();\n",
      "post": "import { Client, User } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  \nconst user: User = {\t\n  createdAt: \"created_at\",\n  customAttributes: {},\n  email: \"email\",\n  externalId: \"external_id\",\n  firstName: \"first_name\",\n  id: \"id\",\n  lastName: \"last_name\",\n  lastNotifiedAt: \"last_notified_at\",\n  lastSeenAt: \"last_seen_at\",\n  updatedAt: \"updated_at\"\n};\n\n  const { data } = await client.users.createUser(\n  user\n);\n\n  console.log(data);\n})();\n"
    },
    "/users/{user_id}": {
      "delete": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.users.deleteUser(\n  \"user_id\"\n);\n\n  console.log(data);\n})();\n"
    }
  },
  "example": "import { Client } from 'magicbell-js/project-client';\n\n(async () => {\n  const client = new Client({\n\ttoken: 'YOUR_TOKEN'});\n\n  const { data } = await client.broadcasts.listBroadcasts(\n  {\n    limit: 5,\n    startingAfter: \"starting_after\",\n    endingBefore: \"ending_before\",\n  }\n);\n\n  console.log(data);\n})();\n",
  "authentication": {
    "bearer": {
      "constructor": "const sdk = new Client({ token: 'YOUR_TOKEN' });",
      "setter": "const sdk = new Client();\nsdk.token = 'YOUR_TOKEN';"
    }
  }
}
